(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{426:function(t,e,a){"use strict";a.r(e);var s=a(56),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("Header"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"unordered-marker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unordered-marker"}},[t._v("#")]),t._v(" Unordered marker")]),t._v(" "),a("p",[t._v("Use dashes "),a("code",[t._v("-")]),t._v(" marker.")]),t._v(" "),a("blockquote",[a("p",[t._v("remark-lint: "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-unordered-list-marker-style",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered-list-marker-style"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("*")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("*")]),t._v(" Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("*")]),t._v(" Three\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("+")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("+")]),t._v(" Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("+")]),t._v(" Three\n")])])]),a("h2",{attrs:{id:"ordered-marker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ordered-marker"}},[t._v("#")]),t._v(" Ordered marker")]),t._v(" "),a("p",[t._v("Use continuous numerating marker for ordered list items.")]),t._v(" "),a("p",[t._v("This increases the readability and overview and allows to refer to items by their number in the same markdown file or externally.")]),t._v(" "),a("p",[t._v("It also allows to create sub-items which is impossible if the same number will be used for all top-level items.")]),t._v(" "),a("p",[t._v("The marker character must be a dot ("),a("code",[t._v(".")]),t._v("), characters like a closing brace ("),a("code",[t._v(")")]),t._v(") are not allowed since they are only supported in CommonMark.")]),t._v(" "),a("p",[t._v("The only disadvantage is that references break when a new list item is added.")]),t._v(" "),a("p",[t._v("This problem can be reduced by")]),t._v(" "),a("ul",[a("li",[t._v("Using an unordered list until the final structure and layout has been determined.")]),t._v(" "),a("li",[t._v("Keeping references close to the list to avoid forgetting to update them.")]),t._v(" "),a("li",[t._v("Always specify an specific version of the markdown file when referring from an external document.")])]),t._v(" "),a("blockquote",[a("p",[t._v("remark-lint: "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-unordered-list-marker-style",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("ordered-list-marker-style"),a("OutboundLink")],1),t._v("\nand "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-ordered-list-marker-value",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("remark-lint-ordered-list-marker-value"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("1.")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("2.")]),t._v(" Two\n  2.1 Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("3.")]),t._v(" Three\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("1.")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("1.")]),t._v(" Two\n  1.1 Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("1.")]),t._v(" Three\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("1) One\n1) Two\n  1.1) Two dot one\n1) Three\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("1) One\n2) Two\n  2.1) Two dot one\n3) Three\n")])])]),a("h2",{attrs:{id:"no-content-before"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-content-before"}},[t._v("#")]),t._v(" No content before")]),t._v(" "),a("p",[t._v("Make sure that there are no other characters (including spaces) in front of each list item.")]),t._v(" "),a("blockquote",[a("p",[t._v("remark-lint: "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-list-item-bullet-indent",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("list-item-bullet-indent"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("1.")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("2.")]),t._v(" Two\n  2.1 Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("3.")]),t._v(" Three\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("¬∑")]),t._v(" character represents a space character.")])]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("x- One\n "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(' Two\n  .- Two dot one\n"- Three\n¬∑- Four\n')])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("x1. One\n "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("2.")]),t._v(' Two\n  .2.1 Two dot one\n"3. Three\n¬∑4. Four\n')])])]),a("h2",{attrs:{id:"continuous-indentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continuous-indentation"}},[t._v("#")]),t._v(" Continuous indentation")]),t._v(" "),a("p",[t._v("Use two (2) spaces for continuous indentation of nested items and their content.")]),t._v(" "),a("blockquote",[a("p",[t._v("remark-lint: "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-list-item-content-indent",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("list-item-content-indent"),a("OutboundLink")],1),t._v("\nand "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-list-item-indent",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("list-item-indent"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three dot one\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n    "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n   "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three dot one\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n    One dot one!\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n Two dot one!\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n   Three dot one!\n")])])]),a("h2",{attrs:{id:"empty-lines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#empty-lines"}},[t._v("#")]),t._v(" Empty lines")]),t._v(" "),a("p",[t._v("A list must not contain blank lines between each list item.")]),t._v(" "),a("blockquote",[a("p",[t._v("remark-lint: "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-list-item-spacing",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("list-item-spacing"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n")])])]),a("h2",{attrs:{id:"empty-lines-before-and-after"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#empty-lines-before-and-after"}},[t._v("#")]),t._v(" Empty lines before and after")]),t._v(" "),a("p",[t._v("Always surround lists by a single empty line except at the beginning of the file.")]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("... a line with text.\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n\nAnother line with text...\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("... a line wit text.\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\nAnother line with text...\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("... a line with text.\n\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two dot one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n\n\nAnother line with text...\n")])])]),a("h2",{attrs:{id:"letter-case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#letter-case"}},[t._v("#")]),t._v(" Letter case")]),t._v(" "),a("p",[t._v("Use upper cases for enumerations because most of the time the content is a noun, proper name, code snippet or standalone sentence.")]),t._v(" "),a("p",[t._v("When the list items are meant to be imaginary concatenated with the sentence that comes before the list, adapt to the same case as the context.")]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("This is awesome\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" The summer is hot.\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" A lot of beautiful human beings.\n")])])]),a("p",[t._v("Proper names or code snippets:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("A list for\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" React\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[t._v("`String`")]),t._v("\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("p",[t._v("Proper names or code snippets:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("A list for\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" react\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[t._v("`string`")]),t._v("\n")])])]),a("h2",{attrs:{id:"punctuation-after-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#punctuation-after-items"}},[t._v("#")]),t._v(" Punctuation after items")]),t._v(" "),a("p",[t._v("Use punctuation at the end of a list item when it contains a sentence that starts with an upper case letter or multiple sentences or paragraphs.")]),t._v(" "),a("p",[t._v("Omit the punctuation for single words.")]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("The Winter is\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Sparkling and frozen.\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Cold and snowy.\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Bright and enlightened.\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" One.\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Two.\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" Three.\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("The Winter is\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" sparkling and frozen\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" cold and snowy\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" bright and enlightened\n")])])]),a("h2",{attrs:{id:"checkbox-character-style"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkbox-character-style"}},[t._v("#")]),t._v(" Checkbox character style")]),t._v(" "),a("p",[t._v("Use "),a("code",[t._v("x")]),t._v(" for ticked checkboxes and a single space "),a("code"),t._v(" for non ticked checkboxes.")]),t._v(" "),a("blockquote",[a("p",[t._v("remark-lint: "),a("a",{attrs:{href:"https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-checkbox-character-style",title:"Link to remarkjs docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("checkbox-character-style"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("üëç Correct")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" [x] One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" [ ] Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" [x] Three\n")])])]),a("p",[a("strong",[t._v("üëé Incorrect")]),t._v(" code for this rule:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" [!] One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" [~] Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" [¬ª] Three\n")])])]),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("*")]),t._v(" [] One\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("*")]),t._v(" [  ] Two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("*")]),t._v(" [     ] Three\n")])])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);